---
 configure.ac                            |    8 +++
 plugins/keyboard/Makefile.am            |    2 
 plugins/keyboard/gsd-keyboard-manager.c |   72 ++++++++++++++++++++++++++++++++
 3 files changed, 82 insertions(+)

--- a/plugins/keyboard/gsd-keyboard-manager.c
+++ b/plugins/keyboard/gsd-keyboard-manager.c
@@ -40,6 +40,8 @@
 #include <X11/XKBlib.h>
 #include <X11/keysym.h>
 
+#include <act/act.h>
+
 #include "gnome-settings-bus.h"
 #include "gnome-settings-profile.h"
 #include "gsd-keyboard-manager.h"
@@ -485,12 +487,75 @@ set_gtk_im_module (GSettings *settings,
 }
 
 static void
+user_notify_is_loaded_cb (GObject    *object,
+                          GParamSpec *pspec,
+                          gpointer    user_data)
+{
+        ActUser *user = ACT_USER (object);
+        GSettings *settings = user_data;
+
+        if (act_user_is_loaded (user)) {
+                GVariant *sources;
+                GVariantIter iter;
+                const gchar *type;
+                const gchar *name;
+                GVariantBuilder builder;
+
+                g_signal_handlers_disconnect_by_data (user, user_data);
+
+                sources = g_settings_get_value (settings, KEY_INPUT_SOURCES);
+
+                g_variant_builder_init (&builder, G_VARIANT_TYPE ("aa{ss}"));
+
+                g_variant_iter_init (&iter, sources);
+                while (g_variant_iter_next (&iter, "(&s&s)", &type, &name)) {
+                        g_variant_builder_open (&builder, G_VARIANT_TYPE ("a{ss}"));
+                        g_variant_builder_add (&builder, "{ss}", type, name);
+                        g_variant_builder_close (&builder);
+                }
+
+                g_variant_unref (sources);
+
+                sources = g_variant_ref_sink (g_variant_builder_end (&builder));
+                act_user_set_input_sources (user, sources);
+                g_variant_unref (sources);
+        }
+}
+
+static void
+manager_notify_is_loaded_cb (GObject    *object,
+                             GParamSpec *pspec,
+                             gpointer    user_data)
+{
+        ActUserManager *manager = ACT_USER_MANAGER (object);
+
+        gboolean loaded;
+        g_object_get (manager, "is-loaded", &loaded, NULL);
+
+        if (loaded) {
+                ActUser *user;
+
+                g_signal_handlers_disconnect_by_data (manager, user_data);
+
+                user = act_user_manager_get_user (manager, g_get_user_name ());
+
+                if (act_user_is_loaded (user))
+                        user_notify_is_loaded_cb (G_OBJECT (user), NULL, user_data);
+                else
+                        g_signal_connect (user, "notify::is-loaded",
+                                          user_notify_is_loaded_cb, user_data);
+        }
+}
+
+static void
 input_sources_changed (GSettings          *settings,
                        const char         *key,
                        GsdKeyboardManager *manager)
 {
         GSettings *interface_settings;
         GVariant *sources;
+        ActUserManager *user_manager;
+        gboolean user_manager_loaded;
         /* Gtk+ uses the IM module advertised in XSETTINGS so, if we
          * have IBus input sources, we want it to load that
          * module. Otherwise we can use the default "simple" module
@@ -501,6 +566,13 @@ input_sources_changed (GSettings
         set_gtk_im_module (interface_settings, sources);
         g_object_unref (interface_settings);
         g_variant_unref (sources);
+
+        user_manager = act_user_manager_get_default ();
+        g_object_get (user_manager, "is-loaded", &user_manager_loaded, NULL);
+        if (user_manager_loaded)
+                manager_notify_is_loaded_cb (G_OBJECT (user_manager), NULL, settings);
+        else
+                g_signal_connect (user_manager, "notify::is-loaded", G_CALLBACK (manager_notify_is_loaded_cb), settings);
 }
 
 static void
--- a/configure.ac
+++ b/configure.ac
@@ -193,9 +193,17 @@ dnl ------------------------------------
 PKG_CHECK_MODULES(XSETTINGS, fontconfig gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION)
 
 dnl ---------------------------------------------------------------------------
+dnl - Keyboard plugin stuff
+dnl ---------------------------------------------------------------------------
+
+PKG_CHECK_MODULES(KEYBOARD, accountsservice)
+
+dnl ---------------------------------------------------------------------------
 dnl - Housekeeping plugin stuff
 dnl ---------------------------------------------------------------------------
 
+
+
 PKG_CHECK_MODULES(GIOUNIX, [gio-unix-2.0])
 
 dnl ---------------------------------------------------------------------------
--- a/plugins/keyboard/Makefile.am
+++ b/plugins/keyboard/Makefile.am
@@ -25,6 +25,7 @@ libkeyboard_la_CPPFLAGS = \
 libkeyboard_la_CFLAGS = \
 	$(PLUGIN_CFLAGS)		\
 	$(SETTINGS_PLUGIN_CFLAGS)	\
+	$(KEYBOARD_CFLAGS) \
 	$(AM_CFLAGS)
 
 libkeyboard_la_LDFLAGS = 	\
@@ -34,6 +35,7 @@ libkeyboard_la_LDFLAGS = 	\
 libkeyboard_la_LIBADD  =				\
 	$(top_builddir)/plugins/common/libcommon.la	\
 	$(SETTINGS_PLUGIN_LIBS)				\
+	$(KEYBOARD_LIBS) \
 	$(NULL)
 
 libexec_PROGRAMS = gsd-test-keyboard
